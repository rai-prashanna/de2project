version: "3.3"

networks:
  frontend:
  backend:
services:
  pulsarbroker:
    hostname: pulsarbroker
    image: apachepulsar/pulsar-standalone
    ports:
      - "6650:6650"
    networks:
      - frontend    
    command: /pulsar/bin/pulsar standalone
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mongodb:
    image: mongo:latest 
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
    command: mongod  
    networks:
      - frontend    
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mongo-express:
    image: mongo-express:latest
    depends_on:
      - "mongodb"
    networks:
      - frontend
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
    ports:
      - 8081:8081
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  producer:
    image: patrick931024/g3-producer:v3
    depends_on:
      - pulsarbroker  
    command: /bin/bash -c "sleep 60 && python /app/request-producer.py rai-prashanna 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"
    networks:
      - frontend
    deploy:
      replicas: 1
      update_config:
        delay: 180s
      restart_policy:
        condition: on-failure
  filter:
    image: patrick931024/g3-filter:v2
    depends_on:
      - pulsarbroker  
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && python /app/filter.py"
    deploy:
      replicas: 1
  q1consumer:
    image: patrick931024/g3-consumer:v3 
    depends_on:
      - pulsarbroker  
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && python /app/q1-consumer.py"
    deploy:
      replicas: 1
  q2consumer:
    image: patrick931024/g3-consumer:v3 
    depends_on:
      - pulsarbroker  
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && python /app/q2-consumer.py 10"
    deploy:
      replicas: 1
  q3consumer:
    image: patrick931024/g3-consumer:v3  
    depends_on:
      - pulsarbroker  
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && python /app/q3-consumer.py"
    deploy:
      replicas: 1
  q4consumer:
    image: patrick931024/g3-consumer:v3 
    depends_on:
      - pulsarbroker  
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && python /app/q4-consumer.py"
    deploy:
      replicas: 1
  aggregation:  
    image: patrick931024/g3-aggregation:v2
    depends_on:
      - pulsarbroker
    networks:
      - frontend
    command: /bin/bash -c "sleep 60 && /usr/local/bin/python /app/agg-server.py"
    deploy:
      replicas: 1


  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
