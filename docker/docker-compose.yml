version: "3.3"
services:
  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
    command: mongod 
    # deploy:
    #   replicas: 1

  mongo-express:
    image: mongo-express:latest
    depends_on:
      - "mongodb"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
    ports:
      - 8081:8081
    # deploy:
    #   replicas: 3


  pulsarbroker:
    hostname: pulsarbroker
    image: apachepulsar/pulsar-standalone
    ports:
      - "6650:6650"
    command: /pulsar/bin/pulsar standalone
    volumes:
      - $PWD/pulsario/:/home
    healthcheck:
      test: "curl -s --fail http://localhost:8080/admin/v2/brokers/health"

  producer:
    build:
      context: ./producers
    depends_on:
      - pulsarbroker  
    volumes:
      - ./producers:/app
    command: /bin/bash -c "sleep 80 && python /app/request-producer.py rai-prashanna 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 2021-01-01 2021-01-31"
  filter:
    build:
      context: ./filter
    depends_on:
      - pulsarbroker  
    volumes:
      - ./filter:/app
    command: /bin/bash -c "sleep 80 && python /app/filter.py"
  q1consumer:
    build:
      context: ./consumers
    depends_on:
      - pulsarbroker  
    volumes:
      - ./consumers:/app
    command: /bin/bash -c "sleep 80 && python /app/q1-consumer.py"
    #command: /bin/bash -c "sleep 2000000"
  q2consumer:
    build:
      context: ./consumers
    depends_on:
      - pulsarbroker  
    volumes:
      - ./consumers:/app
    #command: /bin/bash -c "sleep 2000000"
    command: /bin/bash -c "sleep 80 && python /app/q2-consumer.py 10"
    # deploy:
    #   replicas: 1
  q3consumer:
    build:
      context: ./consumers
    depends_on:
      - pulsarbroker  
    volumes:
      - ./consumers:/app
    command: /bin/bash -c "sleep 80 && python /app/q3-consumer.py"
    #command: /bin/bash -c "sleep 2000000"
  q4consumer:
    build:
     context: ./consumers
    depends_on:
      - pulsarbroker  
    volumes:
      - ./consumers:/app
    command: /bin/bash -c "sleep 80 && python /app/q4-consumer.py"
    #command: /bin/bash -c "sleep 2000000"
  aggregation:  
    build:
      context: ./aggregation
    depends_on:
      - pulsarbroker
    volumes:
      - ./aggregation:/app
    #command: /bin/bash -c "sleep 2000000"
    command: /bin/bash -c "sleep 200 && python /app/agg-server.py 10 15 20 25" 

  app:  
    build:
      context: ./frontend
    depends_on:
      - pulsarbroker
      - mongodb
    ports:
      - "5000:5000"
    volumes:
      - ./frontend:/app
    #command: /bin/bash -c "sleep 2000000"
    command: /bin/bash -c "sleep 200 && python -u /app/app.py" 
